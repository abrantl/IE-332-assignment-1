\documentclass[11pt]{article}

%  USE PACKAGES  ---------------------- 
\usepackage[margin=0.7in,vmargin=1in]{geometry}
\usepackage{amsmath,amsthm,amsfonts}
\usepackage{amssymb}
\usepackage{fancyhdr}
\usepackage{enumerate}
\usepackage{mathtools}
\usepackage{hyperref,color}
\usepackage{enumitem,amssymb}
\newlist{todolist}{itemize}{4}
\setlist[todolist]{label=$\square$}
\usepackage{pifont}
\newcommand{\cmark}{\ding{51}}%
\newcommand{\xmark}{\ding{55}}%
\newcommand{\done}{\rlap{$\square$}{\raisebox{2pt}{\large\hspace{1pt}\cmark}}%
\hspace{-2.5pt}}
\newcommand{\HREF}[2]{\href{#1}{#2}}
\usepackage{textcomp}
\usepackage{listings}
\lstset{
basicstyle=\small\ttfamily,
% columns=flexible,
upquote=true,
breaklines=true,
showstringspaces=false
}
%  -------------------------------------------- 

%  HEADER AND FOOTER (DO NOT EDIT) ----------------------
\newcommand{\problemnumber}{0}
\pagestyle{fancy}
\fancyhead{}
\fancyhead[L]{\textbf{Question \problemnumber}}
\newcommand{\newquestion}[1]{
\clearpage % page break and flush floats
\renewcommand{\problemnumber}{#1} % set problem number for header
\phantom{}  % Put something on the page so it shows
}
\fancyfoot[L]{IE 332}
\fancyfoot[C]{Assignment submission}
\fancyfoot[R]{Page \thepage}
\renewcommand{\footrulewidth}{0.4pt}

%  --------------------------------------------


%  COVER SHEET (FILL IN THE TABLE AS INSTRUCTED IN THE ASSIGNMENT) ----------------------
\newcommand{\addcoversheet}{
\clearpage
\thispagestyle{empty}
\vspace*{0.5in}

\begin{center}
\Huge{{\bf IE332 Assignment \#1}} % <-- replace with correct assignment #

Due: Feb 24th, 11:59pm EST % <-- replace with correct due date and time
\end{center}

\vspace{0.3in}

\noindent We have {\bf read and understood the assignment instructions}. We certify that the submitted work does not violate any academic misconduct rules, and that it is solely our own work. By listing our names below we acknowledge that any misconduct will result in appropriate consequences. 

\vspace{0.2in}

\noindent {\em ``As a Boilermaker pursuing academic excellence, I pledge to be honest and true in all that I do.
Accountable together -- we are Purdue.''}


\vspace{0.3in}

\begin{table}[h!]
  \begin{center}
    \label{tab:table1}
    \begin{tabular}{c|ccccc|c|c}
      Student & Q1 & Q2 & Q3 & Q4 & Q5 & Overall & DIFF\\
      \hline
      Anna Brantley & 10 & 70 & 10 & 10 & 50 & 150 & 25\\
      Vishal Tijo & 70 & 10 & 10 & 10 & 10 & 110 & -15\\
      Francisca Cevallos & 10 & 10 & 70 & 10 & 40 & 140 & 15 \\
      Maude Frappart & 10 & 10 & 10 & 70 & 0 & 100 & -25\\
      \hline
      St Dev & 26 & 26 & 26 & 26 & 21 & 21 & 21
    \end{tabular}
  \end{center}
\end{table}

\vspace{0.2in}

\noindent Date: \today.
}
%  -----------------------------------------

%  TODO LIST (COMPLETE THE FULL CHECKLIST - USE AS EXAMPLE THE FIRST CHECKED BOXES!) ----------------------
\newcommand{\addtodo}{
\clearpage
\thispagestyle{empty}

\section*{Read Carefully. Important!}

\noindent By electronically uploading this assignment to Brightspace you acknowledge these statements and accept any repercussions if in any violation of ANY Purdue Academic Misconduct policies. You must upload your homework on time for it to be graded. No late assignments will be accepted. {\bf Only the last uploaded version of your assignment before the due date will be graded}.

\vspace{0.2in}

\noindent {\bf NOTE:} You should aim to submit no later than 30 minutes before the deadline, as there could be last minute network traffic that would cause your assignment to be late, resulting in a grade of zero. 

\vspace{0.2in}

\noindent When submitting your assignment it is assumed that every student considers the below checklist, as there are grading consequences otherwise (e.g., not submitting a cover sheet is an automatic grade of ZERO).

\begin{todolist}

    \item[\done] Your solutions were prepared using the \LaTeX template provided in Brightspace. 
    \item[\done] Your submission has a cover sheet as its first page and this checklist as its second page, according to the template provided.
	 \item All of your solutions (program code, etc.) are included in the submission as requested. % Check this checkbox and the following ones if satisfied <---
    \item You have not included any screen shots, photos, etc. (plots should be intermediately saved as .png files and then added into your .tex file). % <---
	 \item All math notation and algorithms (algorithmic environment) are created using appropriate \LaTeX code (no pictures, handwritten solutions, etc.). % <---
    \item The .pdf is submitted as an individual file and not in a {\tt .zip}.
    \item You kept the \LaTeX source code in your files until this assignment is graded, in case you are required to show proof of creating your assignment using \LaTeX.  % <---
    \item If submitting with a partner, your partner is added in the submission section in Gradescope after you upload your file. % <---
    \item You have correctly matched each question to its page \# in the .pdf submission in the Gradescope section (after you uploaded your file).
    \item Watch videos on creating pseudocode if you need a refresher or quick reference to the idea. These are good starter videos:    % <---
    
     \HREF{https://www.youtube.com/watch?v=4jLO0vXPktU}{www.youtube.com/watch?v=4jLO0vXPktU} 
    
    \HREF{https://www.youtube.com/watch?v=yGvfltxHKUU}{www.youtube.com/watch?v=yGvfltxHKUU}
\end{todolist}
}

%% LaTeX
% Für alle, die die Schönheit von Wissenschaft anderen zeigen wollen
% For anyone who wants to show the beauty of science to others

%  -----------------------------------------


\begin{document}


\addcoversheet
\addtodo

% BEGIN YOUR ASSIGNMENT HERE:

% Question 1
\newquestion{1}

\noindent Example of proper typesetting of quotation marks:\\
``proper opening and closing quotation marks'' vs "bad quotation marks".

% Question 2
\newquestion{2}
a. 

Declare int function (int num) 
	
	If num < 0: 
		
		Return function(–num) 
	
	End if 

	If num=0 or num=7: 

		Return 1 

	End if 

	If num < 10: 

		Return 0 

	End if 

	return num /10 - 2 * (num-num/10*10) 

End function 

b. 

Declare int function (int n) 

	If n = 0: 

		Return 1 

	End if 

	Else:  
	
		Return n * function(n-1) 

End function 

c. 

Declare int main() 

Declare int arr[] = {25, 11, 7, 75, 56} 

Declare int length = 5 

Declare int max = arr[0] 

	For i = 0 to length–1: 

		If arr[i] > max: 

			Max = arr[i] 

		End if 

	End for 

	Print max 

End main 


d. 

Declare int function (int s) 

Declare sum = 0 

Declare n=1 

	For (sum < s): 

		sum = sum + (n *n *n) 

		n = n + 1 

	End for 

	Return sum 

End function 

e. 

Declare struct pair 

Declare int min 

Declare int max 

Declare struct pair function (int arr[0], int n) 

Declare struct pair minmax 

Declare int I 

	If (n=1): 

		minmax.max = arr[0] 

		minmax.min = arr[0] 

		return minmax 

	End if 

	If (arr[0] > arr[1]): 

		minmax.max = arr[0] 

		minmax.min = arr[1] 

	End if 

	Else: 

		minmax.max = arr[1] 

		minmax.min = arr[0] 

	End else 

	For (I = 2; I < n; I++): 

		if (arr[I] > minmax.max): 

			minmax.max = arr[I] 

		else if (arr[I] < minmax.min): 

			minmax.min = arr[I] 

		end if 

	End for 

	Return minmax 

End function 

 

%Question 3
\newquestion{3}


a. 

SELECT staff.first_name, staff.last_name, staff.email, city.city, address.district, country.country, address.address 
FROM staff 
JOIN store ON staff.staff_id = store.manager_staff_id 
JOIN address ON store.address_id = address.address_id 
JOIN city ON address.city_id = city.city_id 
JOIN country ON city.country_id = country.country_id 
LIMIT 0 , 10 

b. 

SELECT inventory.inventory_id, inventory.store_id, film.title, film.rating, film.rental_rate, film.replacement_cost 
FROM inventory, film 
LIMIT 0 , 10 

c. 

SELECT store_id, rating, COUNT( rating )  AS number_items 
FROM inventory, film 
GROUP  BY store_id, rating 
ORDER  BY store_id DESC  
LIMIT 0 , 10

d. 

SELECT film_category.category_id, store.store_id, SUM( film.replacement_cost ) AS total_replacement_cost, AVG(film.replacement_cost ) AS average_replacement_cost, COUNT( film.film_id )  AS film_count 
FROM film 
JOIN film_category ON film.film_id = film_category.film_id 
JOIN inventory ON film.film_id = inventory.film_id 
JOIN store ON inventory.store_id = store.store_id 
GROUP  BY store.store_id, film_category.film_id 
LIMIT 0 , 10

e. 

SELECT customer.first_name, customer.last_name, COUNT( payment.rental_id ) AS quantity_of_rentals, SUM(payment.amount )  AS total_revenue 
FROM customer 
JOIN rental ON customer.customer_id = rental.customer_id 
JOIN payment ON rental.rental_id = payment.rental_id 
GROUP  BY customer.customer_id 
HAVING SUM( payment.amount )  >150 
ORDER  BY total_revenue DESC  
LIMIT 0 , 10 


f. 

SELECT film.title, MAX( rental_rate )  AS highest_rental_price 
FROM film 
GROUP  BY film.title 
LIMIT 0 , 10 

g. 

SELECT c.first_name, c.last_name, c.email, p.total_spent 
FROM customer c 
JOIN ( 
		SELECT customer_id, SUM( amount )  AS total_spent 
		FROM payment 
	WHERE YEAR( payment_date )  =2005 
		AND MONTH( payment_date )  =6 
	GROUP  BY customer_id 
HAVING SUM( amount )  > (  
SELECT AVG( total_spent )  
FROM ( 
SELECT SUM( amount )  AS total_spent 
FROM payment 
WHERE YEAR( payment_date )  =2005 
AND MONTH( payment_date )  =6 
GROUP  BY customer_id )  AS j 
) 
) AS p ON c.customer_id = p.customer_id 
LIMIT 0 , 10 



%Question 4
\newquestion{4}

%Question 5
\newquestion{5}




\end{document}
